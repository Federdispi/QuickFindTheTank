#include "gameWorld.h"
GameWorld::GameWorld()
{
	gridLength = 32;
	gridHeight = 18;
	setUpTiles();
}

void GameWorld::setUpTiles()
{
	tiles.clear();
	std::vector<GameTile*> firstRow;
	firstRow.push_back(new GameTile("block.png", 0, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 60, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 120, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 180, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 240, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 300, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 360, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 420, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 480, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 540, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 600, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 660, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 720, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 780, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 840, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 900, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 960, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1020, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1080, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1140, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1200, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1260, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1320, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1380, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1440, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1500, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1560, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1620, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1680, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1740, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1800, 0, false, false));
	firstRow.push_back(new GameTile("block.png", 1860, 0, false, false));
	tiles.push_back(firstRow);

	std::vector<GameTile*> secondRow;
	secondRow.push_back(new GameTile("block.png", 0, 60, false, false));
	secondRow.push_back(new GameTile("ground.png", 60, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 120, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 180, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 240, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 300, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 360, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 420, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 480, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 540, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 600, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 660, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 720, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 780, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 840, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 900, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 960, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1020, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1080, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1140, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1200, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1260, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1320, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1380, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1440, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1500, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1560, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1620, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1680, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1740, 60, true, false));
	secondRow.push_back(new GameTile("ground.png", 1800, 60, true, false));
	secondRow.push_back(new GameTile("block.png", 1860, 60, false, false));
	tiles.push_back(secondRow);

	std::vector<GameTile*> thirdRow;
	thirdRow.push_back(new GameTile("block.png", 0, 120, false, false));
	thirdRow.push_back(new GameTile("ground.png", 60, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 120, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 180, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 240, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 300, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 360, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 420, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 480, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 540, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 600, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 660, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 720, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 780, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 840, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 900, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 960, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1020, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1080, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1140, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1200, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1260, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1320, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1380, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1440, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1500, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1560, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1620, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1680, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1740, 120, true, false));
	thirdRow.push_back(new GameTile("ground.png", 1800, 120, true, false));
	thirdRow.push_back(new GameTile("block.png", 1860, 120, false, false));
	tiles.push_back(thirdRow);

	std::vector<GameTile*> fourthRow;
	fourthRow.push_back(new GameTile("block.png", 0, 180, false, false));
	fourthRow.push_back(new GameTile("ground.png", 60, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 120, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 180, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 240, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 300, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 360, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 420, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 480, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 540, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 600, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 660, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 720, 180, true, false));
	fourthRow.push_back(new GameTile("wall.png", 780, 180, false, true));
	fourthRow.push_back(new GameTile("wall.png", 840, 180, false, true));
	fourthRow.push_back(new GameTile("wall.png", 900, 180, false, true));
	fourthRow.push_back(new GameTile("wall.png", 960, 180, false, true));
	fourthRow.push_back(new GameTile("wall.png", 1020, 180, false, true));
	fourthRow.push_back(new GameTile("wall.png", 1080, 180, false, true));
	fourthRow.push_back(new GameTile("ground.png", 1140, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1200, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1260, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1320, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1380, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1440, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1500, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1560, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1620, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1680, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1740, 180, true, false));
	fourthRow.push_back(new GameTile("ground.png", 1800, 180, true, false));
	fourthRow.push_back(new GameTile("block.png", 1860, 180, false, false));
	tiles.push_back(fourthRow);

	std::vector<GameTile*> fifthRow;
	fifthRow.push_back(new GameTile("block.png", 0, 240, false, false));
	fifthRow.push_back(new GameTile("ground.png", 60, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 120, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 180, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 240, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 300, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 360, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 420, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 480, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 540, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 600, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 660, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 720, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 780, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 840, 240, true, false));
	fifthRow.push_back(new GameTile("wall.png", 900, 240, false, true));
	fifthRow.push_back(new GameTile("wall.png", 960, 240, false, true));
	fifthRow.push_back(new GameTile("ground.png", 1020, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1080, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1140, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1200, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1260, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1320, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1380, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1440, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1500, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1560, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1620, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1680, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1740, 240, true, false));
	fifthRow.push_back(new GameTile("ground.png", 1800, 240, true, false));
	fifthRow.push_back(new GameTile("block.png", 1860, 240, false, false));
	tiles.push_back(fifthRow);

	std::vector<GameTile*> sixthRow;
	sixthRow.push_back(new GameTile("block.png", 0, 300, false, false));
	sixthRow.push_back(new GameTile("ground.png", 60, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 120, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 180, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 240, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 300, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 360, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 420, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 480, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 540, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 600, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 660, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 720, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 780, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 840, 300, true, false));
	sixthRow.push_back(new GameTile("wall.png", 900, 300, false, true));
	sixthRow.push_back(new GameTile("wall.png", 960, 300, false, true));
	sixthRow.push_back(new GameTile("ground.png", 1020, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1080, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1140, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1200, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1260, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1320, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1380, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1440, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1500, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1560, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1620, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1680, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1740, 300, true, false));
	sixthRow.push_back(new GameTile("ground.png", 1800, 300, true, false));
	sixthRow.push_back(new GameTile("block.png", 1860, 300, false, false));
	tiles.push_back(sixthRow);

	std::vector<GameTile*> seventhRow;
	seventhRow.push_back(new GameTile("block.png", 0, 360, false, false));
	seventhRow.push_back(new GameTile("ground.png", 60, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 120, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 180, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 240, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 300, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 360, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 420, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 480, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 540, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 600, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 660, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 720, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 780, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 840, 360, true, false));
	seventhRow.push_back(new GameTile("wall.png", 900, 360, false, true));
	seventhRow.push_back(new GameTile("wall.png", 960, 360, false, true));
	seventhRow.push_back(new GameTile("ground.png", 1020, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1080, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1140, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1200, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1260, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1320, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1380, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1440, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1500, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1560, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1620, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1680, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1740, 360, true, false));
	seventhRow.push_back(new GameTile("ground.png", 1800, 360, true, false));
	seventhRow.push_back(new GameTile("block.png", 1860, 360, false, false));
	tiles.push_back(seventhRow);

	std::vector<GameTile*> eighthRow;
	eighthRow.push_back(new GameTile("block.png", 0, 420, false, false));
	eighthRow.push_back(new GameTile("ground.png", 60, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 120, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 180, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 240, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 300, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 360, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 420, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 480, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 540, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 600, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 660, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 720, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 780, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 840, 420, true, false));
	eighthRow.push_back(new GameTile("wall.png", 900, 420, false , true));
	eighthRow.push_back(new GameTile("wall.png", 960, 420, false, true));
	eighthRow.push_back(new GameTile("ground.png", 1020, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1080, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1140, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1200, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1260, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1320, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1380, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1440, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1500, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1560, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1620, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1680, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1740, 420, true, false));
	eighthRow.push_back(new GameTile("ground.png", 1800, 420, true, false));
	eighthRow.push_back(new GameTile("block.png", 1860, 420, false, false));
	tiles.push_back(eighthRow);

	std::vector<GameTile*> ninthRow;
	ninthRow.push_back(new GameTile("block.png", 0, 480, false, false));
	ninthRow.push_back(new GameTile("ground.png", 60, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 120, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 180, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 240, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 300, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 360, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 420, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 480, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 540, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 600, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 660, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 720, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 780, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 840, 480, true, false));
	ninthRow.push_back(new GameTile("wall.png", 900, 480, false, true));
	ninthRow.push_back(new GameTile("wall.png", 960, 480, false, true));
	ninthRow.push_back(new GameTile("ground.png", 1020, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1080, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1140, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1200, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1260, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1320, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1380, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1440, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1500, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1560, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1620, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1680, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1740, 480, true, false));
	ninthRow.push_back(new GameTile("ground.png", 1800, 480, true, false));
	ninthRow.push_back(new GameTile("block.png", 1860, 480, false, false));
	tiles.push_back(ninthRow);

	std::vector<GameTile*> tenthRow;
	tenthRow.push_back(new GameTile("block.png", 0, 540, false, false));
	tenthRow.push_back(new GameTile("ground.png", 60, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 120, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 180, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 240, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 300, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 360, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 420, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 480, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 540, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 600, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 660, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 720, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 780, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 840, 540, true, false));
	tenthRow.push_back(new GameTile("wall.png", 900, 540, false, true));
	tenthRow.push_back(new GameTile("wall.png", 960, 540, false, true));
	tenthRow.push_back(new GameTile("ground.png", 1020, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1080, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1140, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1200, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1260, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1320, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1380, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1440, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1500, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1560, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1620, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1680, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1740, 540, true, false));
	tenthRow.push_back(new GameTile("ground.png", 1800, 540, true, false));
	tenthRow.push_back(new GameTile("block.png", 1860, 540, false, false));
	tiles.push_back(tenthRow);

	std::vector<GameTile*> eleventhRow;
	eleventhRow.push_back(new GameTile("block.png", 0, 600, false, false));
	eleventhRow.push_back(new GameTile("ground.png", 60, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 120, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 180, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 240, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 300, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 360, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 420, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 480, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 540, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 600, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 660, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 720, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 780, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 840, 600, true, false));
	eleventhRow.push_back(new GameTile("wall.png", 900, 600, false, true));
	eleventhRow.push_back(new GameTile("wall.png", 960, 600, false, true));
	eleventhRow.push_back(new GameTile("ground.png", 1020, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1080, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1140, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1200, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1260, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1320, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1380, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1440, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1500, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1560, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1620, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1680, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1740, 600, true, false));
	eleventhRow.push_back(new GameTile("ground.png", 1800, 600, true, false));
	eleventhRow.push_back(new GameTile("block.png", 1860, 600, false, false));
	tiles.push_back(eleventhRow);

	std::vector<GameTile*> twelfthRow;
	twelfthRow.push_back(new GameTile("block.png", 0, 660, false, false));
	twelfthRow.push_back(new GameTile("ground.png", 60, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 120, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 180, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 240, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 300, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 360, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 420, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 480, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 540, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 600, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 660, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 720, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 780, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 840, 660, true, false));
	twelfthRow.push_back(new GameTile("wall.png", 900, 660, false, true));
	twelfthRow.push_back(new GameTile("wall.png", 960, 660, false, true));
	twelfthRow.push_back(new GameTile("ground.png", 1020, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1080, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1140, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1200, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1260, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1320, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1380, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1440, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1500, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1560, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1620, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1680, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1740, 660, true, false));
	twelfthRow.push_back(new GameTile("ground.png", 1800, 660, true, false));
	twelfthRow.push_back(new GameTile("block.png", 1860, 660, false, false));
	tiles.push_back(twelfthRow);

	std::vector<GameTile*> thirteenthRow;
	thirteenthRow.push_back(new GameTile("block.png", 0, 720, false, false));
	thirteenthRow.push_back(new GameTile("ground.png", 60, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 120, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 180, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 240, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 300, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 360, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 420, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 480, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 540, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 600, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 660, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 720, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 780, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 840, 720, true, false));
	thirteenthRow.push_back(new GameTile("wall.png", 900, 720, false, true));
	thirteenthRow.push_back(new GameTile("wall.png", 960, 720, false, true));
	thirteenthRow.push_back(new GameTile("ground.png", 1020, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1080, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1140, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1200, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1260, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1320, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1380, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1440, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1500, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1560, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1620, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1680, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1740, 720, true, false));
	thirteenthRow.push_back(new GameTile("ground.png", 1800, 720, true, false));
	thirteenthRow.push_back(new GameTile("block.png", 1860, 720, false, false));
	tiles.push_back(thirteenthRow);

	std::vector<GameTile*> fourteenthRow;
	fourteenthRow.push_back(new GameTile("block.png", 0, 780, false, false));
	fourteenthRow.push_back(new GameTile("ground.png", 60, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 120, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 180, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 240, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 300, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 360, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 420, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 480, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 540, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 600, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 660, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 720, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 780, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 840, 780, true, false));
	fourteenthRow.push_back(new GameTile("wall.png", 900, 780, false, true));
	fourteenthRow.push_back(new GameTile("wall.png", 960, 780, false, true));
	fourteenthRow.push_back(new GameTile("ground.png", 1020, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1080, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1140, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1200, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1260, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1320, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1380, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1440, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1500, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1560, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1620, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1680, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1740, 780, true, false));
	fourteenthRow.push_back(new GameTile("ground.png", 1800, 780, true, false));
	fourteenthRow.push_back(new GameTile("block.png", 1860, 780, false, false));
	tiles.push_back(fourteenthRow);

	std::vector<GameTile*> fifteenthRow;
	fifteenthRow.push_back(new GameTile("block.png", 0, 840, false, false));
	fifteenthRow.push_back(new GameTile("ground.png", 60, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 120, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 180, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 240, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 300, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 360, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 420, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 480, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 540, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 600, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 660, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 720, 840, true, false));
	fifteenthRow.push_back(new GameTile("wall.png", 780, 840, false, true));
	fifteenthRow.push_back(new GameTile("wall.png", 840, 840, false, true));
	fifteenthRow.push_back(new GameTile("wall.png", 900, 840, false, true));
	fifteenthRow.push_back(new GameTile("wall.png", 960, 840, false, true));
	fifteenthRow.push_back(new GameTile("wall.png", 1020, 840, false, true));
	fifteenthRow.push_back(new GameTile("wall.png", 1080, 840, false, true));
	fifteenthRow.push_back(new GameTile("ground.png", 1140, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1200, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1260, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1320, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1380, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1440, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1500, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1560, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1620, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1680, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1740, 840, true, false));
	fifteenthRow.push_back(new GameTile("ground.png", 1800, 840, true, false));
	fifteenthRow.push_back(new GameTile("block.png", 1860, 840, false, false));
	tiles.push_back(fifteenthRow);

	std::vector<GameTile*> sixteenthRow;
	sixteenthRow.push_back(new GameTile("block.png", 0, 900, false, false));
	sixteenthRow.push_back(new GameTile("ground.png", 60, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 120, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 180, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 240, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 300, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 360, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 420, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 480, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 540, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 600, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 660, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 720, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 780, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 840, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 900, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 960, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1020, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1080, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1140, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1200, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1260, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1320, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1380, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1440, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1500, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1560, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1620, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1680, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1740, 900, true, false));
	sixteenthRow.push_back(new GameTile("ground.png", 1800, 900, true, false));
	sixteenthRow.push_back(new GameTile("block.png", 1860, 900, false, false));
	tiles.push_back(sixteenthRow);

	std::vector<GameTile*> seventeenthRow;
	seventeenthRow.push_back(new GameTile("block.png", 0, 960, false, false));
	seventeenthRow.push_back(new GameTile("ground.png", 60, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 120, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 180, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 240, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 300, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 360, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 420, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 480, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 540, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 600, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 660, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 720, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 780, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 840, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 900, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 960, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1020, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1080, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1140, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1200, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1260, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1320, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1380, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1440, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1500, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1560, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1620, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1680, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1740, 960, true, false));
	seventeenthRow.push_back(new GameTile("ground.png", 1800, 960, true, false));
	seventeenthRow.push_back(new GameTile("block.png", 1860, 960, false, false));
	tiles.push_back(seventeenthRow);


	std::vector<GameTile*> eighteenthRow;
	eighteenthRow.push_back(new GameTile("block.png", 0, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 60, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 120, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 180, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 240, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 300, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 360, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 420, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 480, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 540, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 600, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 660, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 720, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 780, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 840, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 900, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 960, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1020, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1080, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1140, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1200, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1260, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1320, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1380, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1440, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1500, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1560, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1620, 1020, false, false));
	eighteenthRow.push_back(new GameTile("heartblock.png", 1680, 1020, false, false));
	eighteenthRow.push_back(new GameTile("heartblock.png", 1740, 1020, false, false));
	eighteenthRow.push_back(new GameTile("heartblock.png", 1800, 1020, false, false));
	eighteenthRow.push_back(new GameTile("block.png", 1860, 1020, false, false));
	tiles.push_back(eighteenthRow);
}

